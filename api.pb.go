// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyMessage) Reset()         { *m = EmptyMessage{} }
func (m *EmptyMessage) String() string { return proto.CompactTextString(m) }
func (*EmptyMessage) ProtoMessage()    {}
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *EmptyMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyMessage.Unmarshal(m, b)
}
func (m *EmptyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyMessage.Marshal(b, m, deterministic)
}
func (m *EmptyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyMessage.Merge(m, src)
}
func (m *EmptyMessage) XXX_Size() int {
	return xxx_messageInfo_EmptyMessage.Size(m)
}
func (m *EmptyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyMessage proto.InternalMessageInfo

type TurnMessage struct {
	X                    int64    `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int64    `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TurnMessage) Reset()         { *m = TurnMessage{} }
func (m *TurnMessage) String() string { return proto.CompactTextString(m) }
func (*TurnMessage) ProtoMessage()    {}
func (*TurnMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *TurnMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TurnMessage.Unmarshal(m, b)
}
func (m *TurnMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TurnMessage.Marshal(b, m, deterministic)
}
func (m *TurnMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TurnMessage.Merge(m, src)
}
func (m *TurnMessage) XXX_Size() int {
	return xxx_messageInfo_TurnMessage.Size(m)
}
func (m *TurnMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TurnMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TurnMessage proto.InternalMessageInfo

func (m *TurnMessage) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *TurnMessage) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type NewRequisitsMessage struct {
	Login                string   `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewRequisitsMessage) Reset()         { *m = NewRequisitsMessage{} }
func (m *NewRequisitsMessage) String() string { return proto.CompactTextString(m) }
func (*NewRequisitsMessage) ProtoMessage()    {}
func (*NewRequisitsMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *NewRequisitsMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewRequisitsMessage.Unmarshal(m, b)
}
func (m *NewRequisitsMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewRequisitsMessage.Marshal(b, m, deterministic)
}
func (m *NewRequisitsMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewRequisitsMessage.Merge(m, src)
}
func (m *NewRequisitsMessage) XXX_Size() int {
	return xxx_messageInfo_NewRequisitsMessage.Size(m)
}
func (m *NewRequisitsMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_NewRequisitsMessage.DiscardUnknown(m)
}

var xxx_messageInfo_NewRequisitsMessage proto.InternalMessageInfo

func (m *NewRequisitsMessage) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *NewRequisitsMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyMessage)(nil), "api.EmptyMessage")
	proto.RegisterType((*TurnMessage)(nil), "api.TurnMessage")
	proto.RegisterType((*NewRequisitsMessage)(nil), "api.NewRequisitsMessage")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x09, 0x85, 0xaa, 0x99, 0xa6, 0x08, 0x5c, 0x16, 0x51, 0x57, 0x28, 0x2b, 0xd8, 0x54,
	0xe2, 0xaf, 0x3d, 0x00, 0x54, 0x91, 0x50, 0xcb, 0xc2, 0x0a, 0x62, 0xed, 0x88, 0x51, 0x62, 0x41,
	0x6c, 0x63, 0xbb, 0x3f, 0x39, 0x01, 0xd7, 0x46, 0x71, 0x68, 0x55, 0x89, 0x2c, 0x9a, 0xe5, 0xb3,
	0xe6, 0x9b, 0xf7, 0xc6, 0x33, 0xe0, 0x33, 0xc5, 0xc7, 0x4a, 0x4b, 0x2b, 0x49, 0x87, 0x29, 0x1e,
	0x9d, 0x41, 0x30, 0x2b, 0x94, 0x2d, 0x17, 0x68, 0x0c, 0xcb, 0x30, 0xba, 0x81, 0x7e, 0xb2, 0xd4,
	0xe2, 0x4f, 0x92, 0x00, 0xbc, 0x4d, 0xe8, 0x5d, 0x79, 0xd7, 0x1d, 0xea, 0x6d, 0x2a, 0x55, 0x86,
	0xc7, 0xb5, 0x2a, 0xa3, 0x18, 0x86, 0xaf, 0xb8, 0xa6, 0xf8, 0xbd, 0xe4, 0x86, 0x5b, 0xb3, 0x45,
	0x2e, 0xe1, 0xf4, 0x4b, 0x66, 0x5c, 0x38, 0xcc, 0xa7, 0xb5, 0x20, 0x23, 0xe8, 0x29, 0x66, 0xcc,
	0x5a, 0xea, 0x0f, 0xd7, 0xc1, 0xa7, 0x3b, 0x7d, 0xf7, 0x73, 0x02, 0xdd, 0x58, 0xc6, 0xac, 0x40,
	0x32, 0x81, 0x80, 0x62, 0xc6, 0x8d, 0x45, 0xfd, 0x66, 0x50, 0x93, 0x8b, 0x71, 0x95, 0x77, 0x3f,
	0xe1, 0xe8, 0xff, 0x53, 0x74, 0x44, 0x1e, 0x00, 0x28, 0x16, 0x72, 0x85, 0xad, 0xa8, 0x67, 0x18,
	0x3e, 0xe5, 0x4c, 0x64, 0x8e, 0xda, 0x0d, 0x42, 0x42, 0x57, 0xdb, 0x30, 0x5b, 0x73, 0x97, 0x29,
	0x0c, 0x66, 0xc2, 0xa2, 0x4e, 0x72, 0x9c, 0xcb, 0x34, 0x2d, 0x0f, 0xb6, 0x9f, 0xc2, 0x60, 0x8e,
	0x6c, 0x85, 0xad, 0xc1, 0x47, 0xe8, 0xbf, 0x48, 0x2e, 0x92, 0x1c, 0xdd, 0xa7, 0xb5, 0xc0, 0xde,
	0x19, 0xb7, 0x49, 0x8e, 0xd5, 0x8a, 0x0f, 0xc6, 0x26, 0x10, 0x6c, 0x63, 0xb6, 0xb2, 0xbb, 0x85,
	0xde, 0x82, 0x7d, 0xd6, 0x5e, 0xe7, 0xae, 0x60, 0xef, 0xb2, 0x1a, 0x91, 0xb4, 0xeb, 0x2e, 0xf3,
	0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x2a, 0x93, 0x90, 0x02, 0xa6, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoGameClient is the client API for GoGame service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoGameClient interface {
	// User
	RegisterUser(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	RemoveUser(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	ChangeUserRequisits(ctx context.Context, in *NewRequisitsMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	// Control game flow
	EnterTheLobby(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	LeaveTheLobby(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	JoinTheGame(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	WaitTheTurn(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	LeaveTheGame(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
	MakeTurn(ctx context.Context, in *TurnMessage, opts ...grpc.CallOption) (*EmptyMessage, error)
}

type goGameClient struct {
	cc grpc.ClientConnInterface
}

func NewGoGameClient(cc grpc.ClientConnInterface) GoGameClient {
	return &goGameClient{cc}
}

func (c *goGameClient) RegisterUser(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) RemoveUser(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/RemoveUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) ChangeUserRequisits(ctx context.Context, in *NewRequisitsMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/ChangeUserRequisits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) EnterTheLobby(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/EnterTheLobby", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) LeaveTheLobby(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/LeaveTheLobby", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) JoinTheGame(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/JoinTheGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) WaitTheTurn(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/WaitTheTurn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) LeaveTheGame(ctx context.Context, in *EmptyMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/LeaveTheGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goGameClient) MakeTurn(ctx context.Context, in *TurnMessage, opts ...grpc.CallOption) (*EmptyMessage, error) {
	out := new(EmptyMessage)
	err := c.cc.Invoke(ctx, "/api.GoGame/MakeTurn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoGameServer is the server API for GoGame service.
type GoGameServer interface {
	// User
	RegisterUser(context.Context, *EmptyMessage) (*EmptyMessage, error)
	RemoveUser(context.Context, *EmptyMessage) (*EmptyMessage, error)
	ChangeUserRequisits(context.Context, *NewRequisitsMessage) (*EmptyMessage, error)
	// Control game flow
	EnterTheLobby(context.Context, *EmptyMessage) (*EmptyMessage, error)
	LeaveTheLobby(context.Context, *EmptyMessage) (*EmptyMessage, error)
	JoinTheGame(context.Context, *EmptyMessage) (*EmptyMessage, error)
	WaitTheTurn(context.Context, *EmptyMessage) (*EmptyMessage, error)
	LeaveTheGame(context.Context, *EmptyMessage) (*EmptyMessage, error)
	MakeTurn(context.Context, *TurnMessage) (*EmptyMessage, error)
}

// UnimplementedGoGameServer can be embedded to have forward compatible implementations.
type UnimplementedGoGameServer struct {
}

func (*UnimplementedGoGameServer) RegisterUser(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}
func (*UnimplementedGoGameServer) RemoveUser(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUser not implemented")
}
func (*UnimplementedGoGameServer) ChangeUserRequisits(ctx context.Context, req *NewRequisitsMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeUserRequisits not implemented")
}
func (*UnimplementedGoGameServer) EnterTheLobby(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnterTheLobby not implemented")
}
func (*UnimplementedGoGameServer) LeaveTheLobby(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveTheLobby not implemented")
}
func (*UnimplementedGoGameServer) JoinTheGame(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinTheGame not implemented")
}
func (*UnimplementedGoGameServer) WaitTheTurn(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WaitTheTurn not implemented")
}
func (*UnimplementedGoGameServer) LeaveTheGame(ctx context.Context, req *EmptyMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveTheGame not implemented")
}
func (*UnimplementedGoGameServer) MakeTurn(ctx context.Context, req *TurnMessage) (*EmptyMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeTurn not implemented")
}

func RegisterGoGameServer(s *grpc.Server, srv GoGameServer) {
	s.RegisterService(&_GoGame_serviceDesc, srv)
}

func _GoGame_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).RegisterUser(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_RemoveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).RemoveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/RemoveUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).RemoveUser(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_ChangeUserRequisits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRequisitsMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).ChangeUserRequisits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/ChangeUserRequisits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).ChangeUserRequisits(ctx, req.(*NewRequisitsMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_EnterTheLobby_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).EnterTheLobby(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/EnterTheLobby",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).EnterTheLobby(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_LeaveTheLobby_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).LeaveTheLobby(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/LeaveTheLobby",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).LeaveTheLobby(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_JoinTheGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).JoinTheGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/JoinTheGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).JoinTheGame(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_WaitTheTurn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).WaitTheTurn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/WaitTheTurn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).WaitTheTurn(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_LeaveTheGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).LeaveTheGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/LeaveTheGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).LeaveTheGame(ctx, req.(*EmptyMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoGame_MakeTurn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TurnMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoGameServer).MakeTurn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.GoGame/MakeTurn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoGameServer).MakeTurn(ctx, req.(*TurnMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoGame_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.GoGame",
	HandlerType: (*GoGameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _GoGame_RegisterUser_Handler,
		},
		{
			MethodName: "RemoveUser",
			Handler:    _GoGame_RemoveUser_Handler,
		},
		{
			MethodName: "ChangeUserRequisits",
			Handler:    _GoGame_ChangeUserRequisits_Handler,
		},
		{
			MethodName: "EnterTheLobby",
			Handler:    _GoGame_EnterTheLobby_Handler,
		},
		{
			MethodName: "LeaveTheLobby",
			Handler:    _GoGame_LeaveTheLobby_Handler,
		},
		{
			MethodName: "JoinTheGame",
			Handler:    _GoGame_JoinTheGame_Handler,
		},
		{
			MethodName: "WaitTheTurn",
			Handler:    _GoGame_WaitTheTurn_Handler,
		},
		{
			MethodName: "LeaveTheGame",
			Handler:    _GoGame_LeaveTheGame_Handler,
		},
		{
			MethodName: "MakeTurn",
			Handler:    _GoGame_MakeTurn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
